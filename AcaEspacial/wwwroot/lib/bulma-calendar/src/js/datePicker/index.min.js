/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/bulma-calendar@6.1.16/src/js/datePicker/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import*as utils from"../utils";import*as type from"../utils/type";import*as dateFns from"date-fns";import EventEmitter from"../utils/events";import template from"./templates/datepicker";import templateDays from"./templates/days";import templateWeekdays from"./templates/weekdays";import templateMonths from"./templates/months";import templateYears from"./templates/years";import defaultOptions from"./defaultOptions";export default class datePicker extends EventEmitter{constructor(t={}){super(),this.options={...defaultOptions,...t},this._clickEvents=["click","touch"],this._supportsPassive=utils.detectSupportsPassive(),this._id=utils.uuid("datePicker"),this.node=null,this.onPreviousDatePicker=this.onPreviousDatePicker.bind(this),this.onNextDatePicker=this.onNextDatePicker.bind(this),this.onSelectMonthDatePicker=this.onSelectMonthDatePicker.bind(this),this.onMonthClickDatePicker=this.onMonthClickDatePicker.bind(this),this.onSelectYearDatePicker=this.onSelectYearDatePicker.bind(this),this.onYearClickDatePicker=this.onYearClickDatePicker.bind(this),this.onDateClickDatePicker=this.onDateClickDatePicker.bind(this),this._init()}get id(){return this._id}set date(t){return type.isObject(t)&&t.start&&t.end&&(this._date=t),this}get date(){return this._date||{start:void 0,end:void 0}}set lang(t){try{this._locale=require(`date-fns/locale/${t}/index.js`)}catch(e){t="en-US",this._locale=require(`date-fns/locale/${t}/index.js`)}finally{return this._lang=t,this}}get lang(){return this._lang}get locale(){return this._locale}set start(t){return t?(t=utils.newDate(t,this.format,"yyyy-MM-dd"),this._isValidDate(t,this.min,this.max)&&(this._date.start=dateFns.startOfDay(t)),this):(this._date.start=void 0,this)}get start(){return this._date.start}set end(t){return t?(t=utils.newDate(t,this.format,"yyyy-MM-dd"),this._isValidDate(t,this.min,this.max)&&(this._date.end=dateFns.endOfDay(t)),this):(this._date.end=void 0,this)}get end(){return this._date.end}set min(t){return this._min=utils.newDate(t,this.format,"yyyy-MM-dd"),this}get min(){return this._min}set max(t){return this._max=utils.newDate(t,this.format,"yyyy-MM-dd"),this}get max(){return this._max}set format(t){return this._format=t,this}get format(){return this._format}onPreviousDatePicker(t){this._supportsPassive||t.preventDefault(),t.stopPropagation();const e=dateFns.lastDayOfMonth(dateFns.subMonths(new Date(dateFns.getYear(this._visibleDate),dateFns.getMonth(this._visibleDate)),1)),s=Math.min(dateFns.getDaysInMonth(e),dateFns.getDate(this._visibleDate));this._setVisibleDate(dateFns.setDate(e,s)),this.refresh()}onNextDatePicker(t){this._supportsPassive||t.preventDefault(),t.stopPropagation();const e=dateFns.addMonths(this._visibleDate,1),s=Math.min(dateFns.getDaysInMonth(e),dateFns.getDate(this._visibleDate));this._setVisibleDate(dateFns.setDate(e,s)),this.refresh()}onSelectMonthDatePicker(t){this._supportsPassive||t.preventDefault(),t.stopPropagation(),this.options.enableMonthSwitch&&(this._ui.body.dates.classList.remove("is-active"),this._ui.body.years.classList.remove("is-active"),this._ui.body.months.classList.add("is-active"),this._toggleNextButton(!1),this._togglePreviousButton(!1))}onSelectYearDatePicker(t){if(this._supportsPassive||t.preventDefault(),t.stopPropagation(),this.options.enableYearSwitch){this._ui.body.dates.classList.remove("is-active"),this._ui.body.months.classList.remove("is-active"),this._ui.body.years.classList.add("is-active"),this._toggleNextButton(!1),this._togglePreviousButton(!1);const t=this._ui.body.years.querySelector(".calendar-year.is-active");t&&(this._ui.body.years.scrollTop=t.offsetTop-this._ui.body.years.offsetTop-this._ui.body.years.clientHeight/2)}}onMonthClickDatePicker(t){this._supportsPassive||t.preventDefault(),t.stopPropagation();const e=dateFns.setMonth(this._visibleDate,parseInt(t.currentTarget.dataset.month)-1);this._visibleDate=this.min?dateFns.max([e,this.min]):e,this._visibleDate=this.max?dateFns.min([this._visibleDate,this.max]):this._visibleDate,this.refresh()}onYearClickDatePicker(t){this._supportsPassive||t.preventDefault(),t.stopPropagation();const e=dateFns.setYear(this._visibleDate,parseInt(t.currentTarget.dataset.year));this._visibleDate=this.min?dateFns.max([e,this.min]):e,this._visibleDate=this.max?dateFns.min([this._visibleDate,this.max]):this._visibleDate,this.refresh()}onDateClickDatePicker(t){this._supportsPassive||t.preventDefault(),t.stopPropagation(),t.currentTarget.classList.contains("is-disabled")||(this._select(new Date(t.currentTarget.dataset.date)),this.refresh())}isRange(){return this.options.isRange}enableDate(t){if(!Array.isArray(this.disabledDates))return;const e=this.disabledDates.findIndex((e=>dateFns.isEqual(e,t)));e>-1&&unset(this.disabledDates[e])}disableDate(t){if(!Array.isArray(this.disabledDates))return;this.disabledDates.findIndex((e=>dateFns.isEqual(e,t)))>-1&&this.disabledDates.push(t)}highlightDate(t){if(!Array.isArray(this.highlightedDates))return;const e=this.highlightedDates.findIndex((e=>dateFns.isEqual(e,t)));e>-1&&unset(this.highlightedDates[e])}unhighlightDate(t){if(!Array.isArray(this.highlightedDates))return;this.highlightedDates.findIndex((e=>dateFns.isEqual(e,t)))>-1&&this.highlightedDates.push(t)}enableWeekDay(t){const e=this.disabledWeekDays.findIndex((e=>dateFns.isEqual(e,t)));e>-1&&unset(this.disabledWeekDays[e])}disableWeekDay(t){this.disabledWeekDays.findIndex((t=>dateFns.isEqual(t,date)))>-1&&this.disabledWeekDays.push(t)}show(){this._open||(this.refresh(),this._ui.container.classList.add("is-active"),this._open=!0,this._focus=!0,this.emit("show",this))}hide(){this._open&&(this._open=!1,this._focus=!1,this._ui.container.classList.remove("is-active"),this.emit("hide",this))}toggle(){this._open?this.hide():this.show()}value(t=null){if(t)return this.options.isRange?(type.isString(t)&&(t=t.split(" - ")),Array.isArray(t)&&(t.length&&(this.start=utils.newDate(t[0],this.format,"yyyy-MM-dd")),2===t.length&&(this.end=utils.newDate(t[1],this.format,"yyyy-MM-dd")))):this._select(t,!1),void this.refresh();let e=this._isValidDate(this.start)?dateFns.format(this.start,this.format,{locale:this.locale}):"";return this.options.isRange&&this._isValidDate(this.end)&&(e+=` - ${dateFns.format(this.end,this.format,{locale:this.locale})}`),e}refresh(){this._ui.body.dates.innerHTML="";const t=new Array(12).fill(dateFns.startOfYear(this._visibleDate)).map(((t,e)=>dateFns.addMonths(t,e)));this._ui.body.months.innerHTML="",this._ui.body.months.appendChild(document.createRange().createContextualFragment(templateMonths({months:t,format:this.options.formats.selectMonth,locale:this.locale})));(this._ui.body.months.querySelectorAll(".datepicker-month")||[]).forEach((t=>{this._clickEvents.forEach((e=>{t.addEventListener(e,this.onMonthClickDatePicker)})),t.classList.remove("is-active"),t.dataset.month===dateFns.format(this._visibleDate,"MM",{locale:this.locale})&&t.classList.add("is-active")}));const e=new Array(2*this.options.displayYearsCount).fill(dateFns.subYears(this._visibleDate,this.options.displayYearsCount)).map(((t,e)=>dateFns.addYears(t,e)));this._ui.body.years.innerHTML="",this._ui.body.years.appendChild(document.createRange().createContextualFragment(templateYears({visibleDate:this._visibleDate,years:e,format:this.options.formats.selectYear,locale:this.locale})));(this._ui.body.years.querySelectorAll(".datepicker-year")||[]).forEach((t=>{this._clickEvents.forEach((e=>{t.addEventListener(e,this.onYearClickDatePicker)})),t.classList.remove("is-active"),t.dataset.year===dateFns.format(this._visibleDate,"yyyy",{locale:this.locale})&&t.classList.add("is-active")}));const s=new Array(7).fill(dateFns.startOfWeek(this._visibleDate,{weekStartsOn:this.options.weekStart})).map(((t,e)=>dateFns.addDays(t,e)));return this._ui.body.dates.appendChild(document.createRange().createContextualFragment(templateWeekdays({days:s,format:this.options.formats.weekday,locale:this.locale}))),this.min&&0===dateFns.differenceInCalendarMonths(this._visibleDate,this.min)?this._togglePreviousButton(!1):this._togglePreviousButton(),this.max&&0===dateFns.differenceInCalendarMonths(this._visibleDate,this.max)?this._toggleNextButton(!1):this._toggleNextButton(),this._ui.navigation.month.innerHTML=dateFns.format(this._visibleDate,this.options.formats.navigationMonth,{locale:this.locale}),this._ui.navigation.year.innerHTML=dateFns.format(this._visibleDate,this.options.formats.navigationYear,{locale:this.locale}),this._renderDays(),this._ui.body.dates.classList.add("is-active"),this._ui.body.months.classList.remove("is-active"),this._ui.body.years.classList.remove("is-active"),this}clear(){const t=new Date;this._date={start:void 0,end:void 0},this._setVisibleDate(t),this.refresh()}render(){return this.refresh(),this.node}_init(){const t=new Date;if(this._open=!1,this.lang=this.options.lang,this.format=this.options.dateFormat||"MM/dd/yyyy",this.disabledDates=type.isFunction(this.options.disabledDates)?this.options.disabledDates:[],this.disabledWeekDays=type.isString(this.options.disabledWeekDays)?this.options.disabledWeekDays.split(","):Array.isArray(this.options.disabledWeekDays)?this.options.disabledWeekDays:[],this.highlightedDates=type.isFunction(this.options.highlightedDates)?this.options.highlightedDates:[],Array.isArray(this.options.disabledDates))for(let t=0;t<this.options.disabledDates.length;t++)this.disabledDates.push(utils.newDate(this.options.disabledDates[t],this.format,"yyyy-MM-dd"));if(Array.isArray(this.options.highlightedDates))for(let t=0;t<this.options.highlightedDates.length;t++)this.highlightedDates.push(utils.newDate(this.options.highlightedDates[t],this.format,"yyyy-MM-dd"));this.min=this.options.minDate,this.max=this.options.maxDate,this._date={start:utils.newDate(this.options.startDate,this.format,"yyyy-MM-dd"),end:this.options.isRange?utils.newDate(this.options.endDate,this.format,"yyyy-MM-dd"):void 0},this._visibleDate=this._isValidDate(this.start)?this.start:t,this._isValidDate(this._visibleDate,this.min,this.max)||(this._visibleDate=this.min?this.min:this.max),this._build(),this._bindEvents(),this.emit("ready",this)}_build(){this.node=document.createRange().createContextualFragment(template({locale:this.locale,visibleDate:this._visibleDate,icons:this.options.icons})),this._ui={container:this.node.firstChild,navigation:{container:this.node.querySelector(".datepicker-nav"),previous:this.node.querySelector(".datepicker-nav-previous"),next:this.node.querySelector(".datepicker-nav-next"),month:this.node.querySelector(".datepicker-nav-month"),year:this.node.querySelector(".datepicker-nav-year")},body:{dates:this.node.querySelector(".datepicker-dates"),days:this.node.querySelector(".datepicker-days"),weekdays:this.node.querySelector(".datepicker-weekdays"),months:this.node.querySelector(".datepicker-months"),years:this.node.querySelector(".datepicker-years")}}}_bindEvents(){document.addEventListener("keydown",(t=>{if(this._focus)switch(t.keyCode||t.which){case 37:this.onPreviousDatePicker(t);break;case 39:this.onNextDatePicker(t)}})),this._ui.navigation.previous&&this._clickEvents.forEach((t=>{this._ui.navigation.previous.addEventListener(t,this.onPreviousDatePicker)})),this._ui.navigation.next&&this._clickEvents.forEach((t=>{this._ui.navigation.next.addEventListener(t,this.onNextDatePicker)})),this._ui.navigation.month&&this._clickEvents.forEach((t=>{this._ui.navigation.month.addEventListener(t,this.onSelectMonthDatePicker)})),this._ui.navigation.year&&this._clickEvents.forEach((t=>{this._ui.navigation.year.addEventListener(t,this.onSelectYearDatePicker)}));(this._ui.body.months.querySelectorAll(".calendar-month")||[]).forEach((t=>{this._clickEvents.forEach((e=>{t.addEventListener(e,this.onMonthClickDatePicker)}))}));(this._ui.body.years.querySelectorAll(".calendar-year")||[]).forEach((t=>{this._clickEvents.forEach((e=>{t.addEventListener(e,this.onYearClickDatePicker)}))}))}_bindDaysEvents(){[].forEach.call(this._ui.days,(t=>{this._clickEvents.forEach((e=>{const s=this._isValidDate(new Date(t.dataset.date),this.min,this.max)?this.onDateClickDatePicker:null;t.addEventListener(e,s)})),t.addEventListener("hover",(t=>{t.preventDEfault()}))}))}_renderDays(){const t=dateFns.startOfWeek(dateFns.startOfMonth(this._visibleDate),{weekStartsOn:this.options.weekStart}),e=dateFns.endOfWeek(dateFns.endOfMonth(this._visibleDate),{weekStartsOn:this.options.weekStart}),s=new Array(dateFns.differenceInDays(e,t)+1).fill(t).map(((t,e)=>{const s=dateFns.startOfDay(dateFns.addDays(t,e)),i=dateFns.isSameMonth(this._visibleDate,s),a=this.options.isRange&&this.end&&dateFns.isWithinInterval(s,{start:dateFns.startOfDay(this.start),end:dateFns.endOfDay(this.end)});let n=!!this.max&&dateFns.isAfter(dateFns.startOfDay(s),dateFns.endOfDay(this.max));n=!n&&this.min?dateFns.isBefore(dateFns.startOfDay(s),dateFns.startOfDay(this.min)):n;let h=!1;if(Array.isArray(this.disabledDates))for(let t=0;t<this.disabledDates.length;t++)s.toDateString()===this.disabledDates[t].toDateString()&&(n=!0);else type.isFunction(this.disabledDates)&&this.disabledDates(this,s)&&(n=!0);if(Array.isArray(this.highlightedDates))for(let t=0;t<this.highlightedDates.length;t++)s.toDateString()===this.highlightedDates[t].toDateString()&&(h=!0);else type.isFunction(this.highlightedDates)&&this.highlightedDates(this,s)&&(h=!0);return this.disabledWeekDays&&this.disabledWeekDays.forEach((t=>{dateFns.getDay(s)==t&&(n=!0)})),{date:s,isRange:this.options.isRange,isToday:dateFns.isToday(s),isStartDate:dateFns.isEqual(dateFns.startOfDay(this.start),s),isEndDate:dateFns.isEqual(dateFns.startOfDay(this.end),s),isDisabled:n,isThisMonth:i,isHighlighted:h,isInRange:a}}));this._ui.body.dates.appendChild(document.createRange().createContextualFragment(templateDays(s))),this._ui.days=this._ui.body.dates.querySelectorAll(".datepicker-date"),this._bindDaysEvents()}_select(t,e=!0){type.isDate(t)||(t=utils.newDate(t,this.format,"yyyy-MM-dd")),this.options.isRange&&(!this._isValidDate(this.start)||this._isValidDate(this.start)&&this._isValidDate(this.end))?(this.start=t,this.end=void 0,e&&this.emit("select:start",this)):this.options.isRange&&!this._isValidDate(this.end)?dateFns.isBefore(t,this.start)?(this.end=this.start,this.start=t,e&&this.emit("select",this)):dateFns.isAfter(t,this.start)||this.options.allowSameDayRange?(this.end=t,e&&this.emit("select",this)):(this.start=t,this.end=void 0,e&&this.emit("select:start",this)):(this.start=t,this.end=void 0,e&&this.emit("select",this)),this._setVisibleDate(this.start),this.options.isRange&&this._isValidDate(this.start)&&this._isValidDate(this.end)&&new Array(dateFns.differenceInDays(this.end,this.start)+1).fill(this.start).map(((t,e)=>{const s=dateFns.addDays(t,e),i=this._ui.body.dates.querySelector(`.datepicker-date[data-date="${s.toString()}"]`);i&&(dateFns.isEqual(this.start,s)&&i.classList.add("datepicker-range-start"),dateFns.isEqual(this.end,s)&&i.classList.add("datepicker-range-end"),i.classList.add("datepicker-range"))}))}_isValidDate(t,e,s){try{return!!t&&(!!dateFns.isValid(t)&&(!e&&!s||(e&&s?dateFns.isWithinInterval(t,{start:e,end:s}):s?dateFns.isBefore(t,s)||dateFns.isEqual(t,s):dateFns.isAfter(t,e)||dateFns.isEqual(t,e))))}catch(t){return!1}}_setVisibleDate(t){t&&(this.min&&(t=dateFns.max([t,this.min])),this.max&&(t=dateFns.min([t,this.max])),this._visibleDate=t)}_togglePreviousButton(t=!0){t?this._ui.navigation.previous.removeAttribute("disabled"):this._ui.navigation.previous.setAttribute("disabled","disabled")}_toggleNextButton(t=!0){t?this._ui.navigation.next.removeAttribute("disabled"):this._ui.navigation.next.setAttribute("disabled","disabled")}}
//# sourceMappingURL=/sm/78bab6f65c3a2199bad55f6e3a478e72ad3b5efbb98da93657f7eb9d71c33849.map