@page "/Administracion/Alumno/Lista"
@using AcaEspacial.Models
@using AcaEspacial.Data
@using Microsoft.AspNetCore.Mvc
@using Microsoft.EntityFrameworkCore
@inject AcademiaContext Db
@inject IHttpContextAccessor httpContextAccessor
@using System.Security.Claims
@inject NavigationManager NavigationManager
@attribute [Authorize(Roles = "Administrador")]

<div class="row">
    <div class="col-6 text-right">
        <a href="Administracion/Usuario/Crear" class="button is-primary">Crear Alumno</a>
    </div>
</div>
<br />

<table class="table is-fullwidth">
    <thead>
        <tr>
            <th>Nombre</th>
            <th>Apellido</th>
            <th>Usuario</th>
            <th>Email</th>
            <th>Areas de Estudio</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var Usuario in ListUsuarioRol)
        {
            <tr>
                <td>@Usuario.IDUsuarioNavigation.Nombre</td>
                <td>@Usuario.IDUsuarioNavigation.Apellido</td>
                <td>@Usuario.IDUsuarioNavigation.Username</td>
                <td>@Usuario.IDUsuarioNavigation.Correo</td>
                <td>@string.Join(", ",Usuario.IDUsuarioNavigation.AlumnoArea.Select(x=>x.IDAreaNavigation.Nombre))</td>
                <td>
                    @if (luser.Contains(Usuario.IDUsuario))
                    {
                        <div class="dropdown is-active">
                            <div class="dropdown-trigger">
                                <button class="button" aria-haspopup="true" aria-controls="dropdown-menu" @onclick=@(e=>DropdownAcciones(@Usuario.IDUsuario))>
                                    <span>Acciones</span>
                                    <span class="icon is-small">
                                        <i class="mdi mdi-chevron-down" aria-hidden="true"></i>
                                    </span>
                                </button>
                            </div>
                            <div class="dropdown-menu" id="dropdown-menu" role="menu">
                                <div class="dropdown-content">
                                    <a class="dropdown-item" @onclick=@(e=> Editar(Usuario.IDUsuario))>
                                        Editar
                                    </a>
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="dropdown">
                            <div class="dropdown-trigger">
                                <button class="button" aria-haspopup="true" aria-controls="dropdown-menu" @onclick=@(e=>DropdownAcciones(@Usuario.IDUsuario))>
                                    <span>Acciones</span>
                                    <span class="icon is-small">
                                        <i class="mdi mdi-chevron-down" aria-hidden="true"></i>
                                    </span>
                                </button>
                            </div>
                            <div class="dropdown-menu" id="dropdown-menu" role="menu">
                                <div class="dropdown-content">
                                    <a class="dropdown-item" @onclick=@(e=> Editar(Usuario.IDUsuario))>
                                        Editar
                                    </a>
                                </div>
                            </div>
                        </div>
                    }
                </td>

            </tr>

        }
    </tbody>
</table>

@code {

    private List<UsuarioRoles> ListUsuarioRol = new();

    private List<Guid> luser = new();

    private Guid UserID = new();

    protected override void OnInitialized()
    {
        if (httpContextAccessor.HttpContext != null)
        {
            UserID = Guid.Parse(httpContextAccessor.HttpContext.User.FindFirstValue(claimType: "IdUsuario"));

            ListUsuarioRol = Db.UsuarioRoles.Include(x => x.IDUsuarioNavigation).ThenInclude(x => x.AlumnoArea).ThenInclude(x => x.IDAreaNavigation)
           .Include(x => x.IDRolNavigation)
           .Where(x => x.IDRolNavigation.Nombre.Equals("Alumno")).ToList();
        }

        base.OnInitialized();
    }

    private void Editar(Guid ID)
    {
        NavigationManager.NavigateTo($"/Administracion/Alumno/Editar/{ID}", true);
    }


    private void DropdownAcciones(Guid id)
    {
        if (luser.Contains(id))
        {
            luser.Remove(id);
            StateHasChanged();
        }
        else
        {
            luser.Add(id);
            StateHasChanged();
        }
    }

}

